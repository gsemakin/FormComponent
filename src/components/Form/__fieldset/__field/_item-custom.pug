mixin custom_form__field(item, langTmpl, div, addedClasses, staticValidationRules, idGen, selectedItems)
    - var langPath = langTmpl[div];
    - var li_Class = addedClasses[item] ? addedClasses[item] : ""
    li(class = li_Class, style = 'list-style-type: none')
        case langPath[item].type
            when 'text'        
                label.MMM--blockLabel(
                    for=item + 'ID-' + idGen)= langPath[item].label
                input.MMM--textInput.MMM--defaultFields(
                    id=item + 'ID-' + idGen
                    type='text'
                    name=item
                    data-rule-required=staticValidationRules[item] ? staticValidationRules[item] : "true"
                    data-msg-required=langPath[item].errMessage
                    aria-required="true")
                    
            when 'checkbox'
                if (selectedItems.hasOwnProperty(item))
                    -var _ifChecked = true        
                else 
                    -var _ifChecked = false
                input(
                    type='checkbox'
                    value=langPath[item].value
                    name=item
                    checked =  _ifChecked
                    id=item + 'ID-' + idGen
                    data-rule-required= staticValidationRules[item] ? staticValidationRules[item] : "false"
                    data-msg-required=langPath[item].errMessage
                    ) 
                label.MMM--blockLabel.MMM--checkboxLabel(
                    style="font-weight:normal; display: inline; margin-left: 10px;"
                    for=item + 'ID-' + idGen)=langPath[item].label  

            when 'radio' 
                if (selectedItems.hasOwnProperty(item))
                    -var _ifChecked = true        
                else 
                    -var _ifChecked = false       
                label.MMM--blockLabel(
                    for=item + 'ID-' + idGen)=langPath[item].label
                input.MMM--textInput.MMM--defaultFields(
                    id=item + 'ID-' + idGen
                    checked =  _ifChecked
                    type='text'
                    name=item
                    data-rule-required=staticValidationRules[item] ? staticValidationRules[item] : "false"
                    data-msg-required=langPath[item].errMessage
                    )  

            when 'textarea'        
                label.MMM--blockLabel(
                    for=item + 'ID-' + idGen)=langPath[item].label
                textarea.MMM--textInput.MMM--defaultFields.MMM--textInput_textArea(
                    id=item + 'ID-' + idGen
                    type='text'
                    name=item
                    data-rule-required=staticValidationRules[item] ? staticValidationRules[item] : "true"
                    data-msg-required=langPath[item].errMessage
                    aria-required="true")=''
                    
            when 'select'        
                label.MMM--blockLabel(
                    for=item + 'ID-' + idGen)=langPath[item].label
                select.js-fancyDropDown.MMM--selectInput.MMM--isVisuallyHidden(
                    id=item + 'ID-' + idGen
                    name=item
                    data-rule-required=staticValidationRules[item] ? staticValidationRules[item] : "true"
                    data-msg-required=langPath[item].errMessage
                    data-lookup=""
                    aria-required="true")  
                        option(
                            value="" disabled="disabled" selected="selected"
                        )=langTmpl.defaultSelect                    
                        each opt in langPath[item].options
                            include select\select__option.pug

            when 'header' 
                h3.MMM--blockLabel.MMM--gapTopMed(
                    for=item + 'ID-' + idGen)=langPath[item] ? langPath[item].label : ""
                p.MMM--txt_italic=langPath[item].subLabel ? langPath[item].subLabel : ""

            default 
                h3.MMM--blockLabel(
                    for=item + 'ID-' + idGen)=langPath[item] ? langPath[item].label : ""
                p.MMM--txt_italic=langPath[item].subLabel ? langPath[item].subLabel : ""

+custom_form__field(item, langTmpl, div, addedClasses, staticValidationRules, idGen, selectedItems)